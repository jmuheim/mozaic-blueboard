// GtlProxy handles interaction with Group the Loop (GTL).
// =======================================================
//
// Installation:
// -------------
//
// - In AUM, in the "Mozaic" MIDI channel, click the "+1" button
// - Click the newly inserted "+" button, then "Audio Unit MIDI Processor" -> "Mozaic"
// - Click the newly inserted Mozaic button
// - Click "Code"
// - Replace the default code with the one in this file
// - Click "Upload"
// - Click the "MIDI Route" button (the "backwards S" in the window's menu bar)
// - Click "Mozaic @M1:4" (LoopManager)
// - Click "Mozaic @M1:5" (GroupManager)
// - Click "Mozaic @M1:6" (ClockManager)
// - Close the window by pressing the "X" button
// - Click the global "MIDI Route" button (the "backwards S" at the top right, or by accessing it through the main menu)
// - Route GtlProxy's output to "Group the Loop"
// - Press "Close"
//
// Usage:
// ------
//
// The loaded session in GTL needs 5 groups (just click "Add Group" a few times).
//
// GTL needs to be configured properly:
//
// - Settings -> MIDI -> MIDI Input Port -> Virtual MIDI
//            -> Clock Settings -> CUE -> Active
//                              -> 1234 -> Active
//                              -> Clock Multiplier Mode -> Add
//                              -> Ableton Link -> Enabled
//                              -> Ableton Link Tempo -> Follow
//                              -> Sync Quantum -> Longest Loop
//            -> Audio Input -> Input Monitoring -> Off
//                           -> Input Source -> Kymatica: AUM Port 1 (GTL will send here)
//                           -> Latency Compensation -> On (TODO: does this work??)
//                           -> Mic Gain -> 100%
//
// GTL needs the following MIDI Bindings (all set as "Tap"):
//
// - Decrease Clock Length: 10
// - Increase Clock Length: 11
// - Reset Session: 15
// - Select loop 1 (in selected group): 6
// - Select loop 2 (in selected group): 7
// - Select loop 3 (in selected group): 8
// - Select loop 4 (in selected group): 9
// - Decrease Clock Length: 10
// - Increase Clock Length: 11
// - Record/Overdub (selected loop): 12
// - Record/Mute (selected loop): 13
// - Record and select next (selected loop): 14
// - Select group Master: 0
// - Select group 1: 1
// - Select group 2: 2
// - Select group 3: 3
// - Select group 4: 4
// - Select group 5: 5

@OnLoad
  SetShortName {92-GtlProxy}

  Call @InitSharedConstants
  Call @InitConstants
  Call @Reset
@End

@InitConstants
  MIDI_DELAY = 0 // GTL doesn't need a delay between on and off
@End

@InitVariables
  clock = 1 // Resetting the GTL session sets this clock length
  newClock = UNDEFINED // Holds the interim new value when setting the clock (as we need to know the difference between current and new value)

  // See @TryToExecuteGroupAndLoopSelection
  nextGroup = UNDEFINED // Holds the interim next value when setting the group
  nextLoop  = UNDEFINED // Same for loop
@End

@Reset
  Log {Reset}
  Call @InitVariables
  Call @ResetGtl
@End

@ResetGtl
  midiToSend = GTL_RESET_SESSION
  Call @SendMidiOnAndOffToGtl
@End

@SendMidiOnAndOffToGtl
  SendMidiNoteOn  MIDI_CHANNEL_GTL, midiToSend, 127
  SendMidiNoteOff MIDI_CHANNEL_GTL, midiToSend,   0, MIDI_DELAY
@End

@OnSysex
  ReceiveSysex data
  sysexLength = SysexSize
  sysexTarget = data[0]
  sysexAction = data[1]

  if sysexTarget = MOZ_INST_GTL_PROXY
    if sysexAction = SYSEX_GTL_SELECT_LOOP
      loop = data[2]
      Call @prepareLoopSelection
    elseif sysexAction = SYSEX_GTL_SELECT_GROUP
      group = data[2]
      Call @prepareGroupSelection
    elseif sysexAction = SYSEX_GTL_UPDATE_CLOCK
      newClock = data[2]
      Call @UpdateClockInGtl
    else
      Log {ERROR: Unknown sysexAction=}, sysexAction
    endif
  elseif sysexTarget = MOZ_INST_ALL
    if sysexAction = SYSEX_RESET_STEP_SEQUENCER
      Call @Reset
    endif
  endif
@End

@prepareLoopSelection
  Log {Preparing nextLoop=}, loop
  nextLoop = loop
  Call @TryToExecuteGroupAndLoopSelection
@End

@prepareGroupSelection
  Log {Preparing nextGroup=}, group
  nextGroup = group
  Call @TryToExecuteGroupAndLoopSelection
@End

// Execution of selecting group and loop needs to happen in the correct order: group, then loop. For this, we wait until we have both values, and then send them together. This makes us independent from the managers' execution order.
@TryToExecuteGroupAndLoopSelection
  // Both selections ready? Then apply them!
  if nextGroup <> UNDEFINED and nextLoop <> UNDEFINED
    Log {Executing selection of both group=}, group, { and loop=}, loop

    midiToSend = GTL_SELECT_GROUP_BASE + nextGroup
    Call @SendMidiOnAndOffToGtl

    midiToSend = GTL_SELECT_LOOP_BASE + nextLoop
    Call @SendMidiOnAndOffToGtl

    nextGroup = UNDEFINED
    nextLoop  = UNDEFINED
  endif
@End

@UpdateClockInGtl
  difference = newClock - clock

  timesToSend = 0
  if difference > 0
    midiToSend = GTL_INCREASE_CLOCK
    timesToSend = difference
  elseif difference < 0
    midiToSend = GTL_DECREASE_CLOCK
    timesToSend = difference * -1
  endif

  Log {Setting clock length from clock=}, clock, { to newClock=}, newClock, { by sending midiToSend=}, midiToSend, { (}, timesToSend, {x)}

  for i = 1 to timesToSend
    Call @SendMidiOnAndOffToGtl
  endfor

  clock = newClock
@End






//////////////////////////////////////////////////////////
// These constants are shared across all Mozaic scripts //
//////////////////////////////////////////////////////////
@InitSharedConstants
  UNDEFINED = -1

  MOZ_INST_GTL_PROXY = 92
  MOZ_INST_ALL       = 100


  SYSEX_GTL_SELECT_LOOP      = 4
  SYSEX_GTL_SELECT_GROUP     = 5
  SYSEX_RESET_STEP_SEQUENCER = 7
  SYSEX_GTL_UPDATE_CLOCK     = 9

  MIDI_CHANNEL_GTL = 1

  GTL_SELECT_GROUP_BASE = 0 // Added group numbers translate exactly to the required MIDI, e.g. main group (0) sends 0, group 1 sends 1, etc., up to group 5 sends 5.
  GTL_SELECT_LOOP_BASE  = 5 // Added loop numbers translate exactly to the required MIDI, e.g. loop 1 sends 6, loop 2 sends 7, etc., up to loop 4 sends 9.

  GTL_DECREASE_CLOCK = 10
  GTL_INCREASE_CLOCK = 11

  GTL_RECORD_OVERDUB     = 12
  GTL_RECORD_MUTE        = 13
  GTL_RECORD_SELECT_NEXT = 14

  GTL_RESET_SESSION = 15
@End
