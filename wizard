// Make sure to start the BlueBoard while pressing the B button!
@OnLoad
  SetShortName {Wizard}

  Call @InitConstants
  Call @InitVariables

  Call @IlluminateAllbuttons
  Call @AskForInput
@End

@InitConstants
  BB_NOTE_A = 60
  BB_NOTE_B = 62
  BB_NOTE_C = 64
  BB_NOTE_D = 65

  UNDEFINED = -1

  1_BEAT_TAP_TIME   = 1000 / (HostTempo / 60)
  2_BEATS_TAP_TIME  = 2 * 1_BEAT_TAP_TIME
  4_BEATS_TAP_TIME = 4 * 1_BEAT_TAP_TIME

  TAP_IMMEDIATE = 1
  TAP_1_BAR  = 1
  TAP_2_BARS = 2
  TAP_4_BARS = 3

  STEP_LOOP = 1
  LOOP_1 = 1
  LOOP_2 = 2
  LOOP_3 = 3
  LOOP_4 = 4

  STEP_GROUP = 2
  GROUP_M = 1
  GROUP_1 = 2
  GROUP_2 = 3
  GROUP_3 = 4
  GROUP_4 = 5
  GROUP_5 = 6

  STEP_CLOCK_LENGTH = 3
  CLOCK_LENGTH_2  = 2
  CLOCK_LENGTH_4  = 4
  CLOCK_LENGTH_8  = 8
  CLOCK_LENGTH_10 = 10
  CLOCK_LENGTH_12 = 12
  CLOCK_LENGTH_16 = 16

  STEP_GTL_SENDS = 4
  GTL_SENDS_GUITAR           = 1
  GTL_SENDS_MIC              = 2
  GTL_SENDS_MIC_AND_GUITAR   = 3
  GTL_SENDS_KEYBOARD         = 4
  GTL_SENDS_MIC_AND_KEYBOARD = 5

  STEP_INSTR_FX = 5
  INSTR_FX_1 = 1
  INSTR_FX_2 = 2
  INSTR_FX_3 = 3
  INSTR_FX_4 = 4
  INSTR_FX_5 = 5
  INSTR_FX_6 = 6

  STEP_REC_MODE = 6
  REC_MODE_RECORD          = 1
  REC_MODE_OVERDUB         = 2
  REC_MODE_RECORD_AND_MUTE = 3

  FIRST_STEP = STEP_LOOP
  LAST_STEP  = STEP_REC_MODE

  GTL_CHANNEL = 15
  BB_CHANNEL  = 0
@End

@InitVariables
  cycleLength = 0
  previousActivatedCycle = 0
  currentStep = FIRST_STEP

  previousSelectedGroup       = UNDEFINED
  previousSelectedLoop        = UNDEFINED
  previousSelectedClockLength = UNDEFINED
  previousSelectedGtlSends    = UNDEFINED
  previousSelectedInstrFx     = UNDEFINED
  previousSelectedRecMode     = UNDEFINED

  groupInputs       = []
  loopInputs        = []
  clockLengthInputs = []
  gtlSends          = []
  instrFxInputs     = []
  recModeInputs     = []
@End

@IlluminateAllbuttons
  SendMidiNoteOn BB_CHANNEL, BB_NOTE_A, 100
  SendMidiNoteOn BB_CHANNEL, BB_NOTE_B, 100
  SendMidiNoteOn BB_CHANNEL, BB_NOTE_C, 100
  SendMidiNoteOn BB_CHANNEL, BB_NOTE_D, 100
@End

@OnMidiNoteOn
  buttonPressedStartTime = SystemTime // Time at which button was pressed down
@End

@OnMidiNoteOff
  buttonPressedTime = SystemTime - buttonPressedStartTime

  If buttonPressedTime >= 4_BEATS_TAP_TIME
    tapType = TAP_4_BARS
  Elseif buttonPressedTime >= 2_BEATS_TAP_TIME
    tapType = TAP_2_BARS
  Elseif buttonPressedTime >= 1_BEAT_TAP_TIME
    tapType = TAP_1_BAR
  Else
    tapType = TAP_IMMEDIATE
  Endif

  Call @DispatchButtonPress
@End

@DispatchButtonPress
  wrongInputDetected = YES

  if MidiNote = BB_NOTE_D
    if tapType = TAP_IMMEDIATE
      Call @ArmCycle
    elseif tapType = TAP_4_BARS
      Call @AddCycle
    endif
  else
    if currentStep = STEP_LOOP
      Call @MapUserInputToLoop
    elseif currentStep = STEP_GROUP
      Call @MapUserInputToGroup
    elseif currentStep = STEP_CLOCK_LENGTH
      Call @MapUserInputToClockLength
    elseif currentStep = STEP_GTL_SENDS
      Call @MapUserInputToGtlSends
    elseif currentStep = STEP_INSTR_FX
      Call @MapUserInputToInstrFx
    elseif currentStep = STEP_REC_MODE
      Call @MapUserInputToRecMode
    endif

    if wrongInputDetected = YES
      Log {Wrong input! Try again.}
    else
      if currentStep < LAST_STEP
        Inc currentStep
      else
        Call @AddCycle
      endif

      Call @AskForInput
    endif
  endif
@End

@MapUserInputToGtlSends
  if tapType = TAP_IMMEDIATE
    if MidiNote = BB_NOTE_A
      previousSelectedGtlSends = GTL_SENDS_GUITAR
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_B
      previousSelectedGtlSends = GTL_SENDS_MIC
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_C
      previousSelectedGtlSends = GTL_SENDS_MIC_AND_GUITAR
      wrongInputDetected = NO
    endif
  elseif tapType = TAP_1_BAR
    if MidiNote = BB_NOTE_A
      previousSelectedGtlSends = GTL_SENDS_KEYBOARD
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_B
      // Some day maybe some voice FX, e.g. Vocoder?
    elseif MidiNote = BB_NOTE_C
      previousSelectedGtlSends = GTL_SENDS_MIC_AND_KEYBOARD
      wrongInputDetected = NO
    endif
  endif
@End

@MapUserInputToRecMode
  if tapType = TAP_IMMEDIATE
    if MidiNote = BB_NOTE_A
      previousSelectedRecMode = REC_MODE_RECORD
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_B
      previousSelectedRecMode = REC_MODE_OVERDUB
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_C
      // TODO: REC_MODE_ADVANCED
    endif
  elseif tapType = TAP_1_BAR
    if MidiNote = BB_NOTE_A
      previousSelectedRecMode = REC_MODE_RECORD_AND_MUTE
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_B
      // Nothing
    elseif MidiNote = BB_NOTE_C
      // TODO: REC_MODE_ADVANCED_AND_MUTE
    endif
  endif
@End

@MapUserInputToInstrFx
  if tapType = TAP_IMMEDIATE
    if MidiNote = BB_NOTE_A
      previousSelectedInstrFx = INSTR_FX_1
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_B
      previousSelectedInstrFx = INSTR_FX_2
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_C
      previousSelectedInstrFx = INSTR_FX_3
      wrongInputDetected = NO
    endif
  elseif tapType = TAP_1_BAR
    if MidiNote = BB_NOTE_A
      previousSelectedInstrFx = INSTR_FX_4
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_B
      previousSelectedInstrFx = INSTR_FX_5
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_C
      previousSelectedInstrFx = INSTR_FX_6
      wrongInputDetected = NO
    endif
  endif
@End

@MapUserInputToLoop
  if tapType = TAP_IMMEDIATE
    if MidiNote = BB_NOTE_A
      previousSelectedLoop = LOOP_1
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_B
      previousSelectedLoop = LOOP_2
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_C
      previousSelectedLoop = LOOP_3
      wrongInputDetected = NO
    endif
  elseif tapType = TAP_1_BAR
    if MidiNote = BB_NOTE_A
      previousSelectedLoop = LOOP_4
      wrongInputDetected = NO
    endif
  endif
@End

@MapUserInputToClockLength
  if tapType = TAP_IMMEDIATE
    if MidiNote = BB_NOTE_A
      previousSelectedClockLength = CLOCK_LENGTH_2
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_B
      previousSelectedClockLength = CLOCK_LENGTH_4
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_C
      previousSelectedClockLength = CLOCK_LENGTH_8
      wrongInputDetected = NO
    endif
  elseif tapType = TAP_1_BAR
    if MidiNote = BB_NOTE_A
      previousSelectedClockLength = CLOCK_LENGTH_10
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_B
      previousSelectedClockLength = CLOCK_LENGTH_12
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_C
      previousSelectedClockLength = CLOCK_LENGTH_16
      wrongInputDetected = NO
    endif
  endif
@End

@MapUserInputToGroup
  if tapType = TAP_IMMEDIATE
    if MidiNote = BB_NOTE_A
      previousSelectedGroup = GROUP_1
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_B
      previousSelectedGroup = GROUP_2
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_C
      previousSelectedGroup = GROUP_3
      wrongInputDetected = NO
    endif
  elseif tapType = TAP_1_BAR
    if MidiNote = BB_NOTE_A
      previousSelectedGroup = GROUP_M
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_B
      previousSelectedGroup = GROUP_4
      wrongInputDetected = NO
    elseif MidiNote = BB_NOTE_C
      previousSelectedGroup = GROUP_5
      wrongInputDetected = NO
    endif
  endif
@End

@AskForInput
  if currentStep = STEP_GROUP
    Log {Please select group...}
  elseif currentStep = STEP_LOOP
    Log {Please select loop...}
  elseif currentStep = STEP_CLOCK_LENGTH
    Log {Please select clock length...}
  elseif currentStep = STEP_GTL_SENDS
    Log {Please select GTL input...}
  elseif currentStep = STEP_INSTR_FX
    Log {Please select instr fx...}
  elseif currentStep = STEP_REC_MODE
    Log {Please select record mode...}
  endif
@End

@AddCycle
  configPartMissing = NO

  if previousSelectedGtlSends = UNDEFINED
    configPartMissing = YES
    Log {No GTL sends selected yet}
  else
    previousSelectedGtlSendsInputs[cycleLength] = previousSelectedGtlSends
  endif

  if previousSelectedRecMode = UNDEFINED
    configPartMissing = YES
    Log {No rec mode selected yet}
  else
    previousSelectedRecModeInputs[cycleLength] = previousSelectedRecMode
  endif

  if previousSelectedInstrFx = UNDEFINED
    configPartMissing = YES
    Log {No instr fx selected yet}
  else
    previousSelectedInstrFxInputs[cycleLength] = previousSelectedInstrFx
  endif

  if previousSelectedLoop = UNDEFINED
    configPartMissing = YES
    Log {No loop selected yet}
  else
    previousSelectedLoopInputs[cycleLength] = previousSelectedLoop
  endif

  if previousSelectedClockLength = UNDEFINED
    configPartMissing = YES
    Log {No clock length selected yet}
  else
    previousSelectedClockLengthInputs[cycleLength] = previousSelectedClockLength
  endif

  if previousSelectedGroup = UNDEFINED
    configPartMissing = YES
    Log {No group selected yet}
  else
    previousSelectedGroupInputs[cycleLength] = previousSelectedGroup
  endif

  if configPartMissing = NO
    currentStep = FIRST_STEP
    Inc cycleLength

    Log {Cycle added!}
  endif
@End

@ArmCycle
  if cycleLength = 0
    Log {No cycles provided yet}
  elseif previousActivatedCycle = cycleLength
    Log {No cycle left}
  else
    Log {Arming cycle #}, previousActivatedCycle, {:}
    Log {- Group: }, previousSelectedGroupInputs[previousActivatedCycle]
    Log {- Loop: }, previousSelectedLoopInputs[previousActivatedCycle]
    Log {- Clock length: }, previousSelectedClockLengthInputs[previousActivatedCycle]
    Log {- GTL sends: }, previousSelectedGroupInputs[previousActivatedCycle]
    Log {- Instr fx: }, previousSelectedInstrFxInputs[previousActivatedCycle]
    Log {- Rec mode: }, previousSelectedRecModeInputs[previousActivatedCycle]

    Inc previousActivatedCycle
  endif
@End
