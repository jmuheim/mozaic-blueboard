// BlueBoardHandler receives the button presses from the BlueBoard and sends them to ModeSwitcher.
// ===============================================================================================
//
// In general:
// -----------
//
// - Make sure to start the BlueBoard while pressing the B button!
// - After turning the BlueBoard on, in AUM, click Menu -> Settings -> Bluetooth MIDI Central -> Connect to iRig BlueBoard
//
// Installation:
// -------------
//
// - Start AUM
// - Create a new MIDI channel
// - Press the "+" button
// - Select "Audio Unit MIDI Processor"
// - Select "Mozaic"
// - Click the newly inserted Mozaic button
// - Click "Code"
// - Replace the default code with the one in this file
// - Click "Upload"
//
// For selecting MIDI sources, click the "MIDI Route" button (the "backwards S" in Mozaic's window):
//
// - Click iRig BlueBoard Bluetooth
//
// The BlueBoard itself needs to receive MIDI from BlueBoardHandler, too:
//
// - Close Mozaic's window by pressing the "X" button
// - Click the global "MIDI Route" button (the "backwards S" at the top right, or by accessing it through the main menu)
// - Route BlueBoardHandler's output to "iRig BlueBoard Bluetooth".

@OnLoad
  SetShortName {0-BlueBoardHandler}

  Call @InitSharedConstants
  Call @InitConstants
  Call @Reset
@End

@InitConstants
  TAP_TIME_1_BEAT = 1000 / (HostTempo / 60)
  TAP_TIME_1_BAR  = 4 * TAP_TIME_1_BEAT
@End

@InitVariables
@End

@Reset
  Call @InitVariables
  Call @IlluminateAllbuttons
@End

@IlluminateAllbuttons
  SendMidiNoteOn MIDI_CHANNEL_BB, BB_BUTTON_A, 100
  SendMidiNoteOn MIDI_CHANNEL_BB, BB_BUTTON_B, 100
  SendMidiNoteOn MIDI_CHANNEL_BB, BB_BUTTON_C, 100
  SendMidiNoteOn MIDI_CHANNEL_BB, BB_BUTTON_D, 100
@End

@OnMidiNoteOn
  buttonDownTime = SystemTime // Time at which button was pressed down
  Log {Button }, MidiNote, { down @ }, buttonDownTime
@End

@OnMidiNoteOff
  buttonUpTime = SystemTime
  buttonPressedDuration = buttonUpTime - buttonDownTime

  If buttonPressedDuration >= TAP_TIME_1_BAR
    tapType = TAP_TYPE_1_BAR
  Elseif buttonPressedDuration >= TAP_TIME_1_BEAT
    tapType = TAP_TYPE_1_BEAT
  Else
    tapType = TAP_TYPE_IMMEDIATE
  Endif

  Log {Button }, MidiNote, { up   @ }, buttonUpTime, { => tapType: }, tapType

  data = [MOZ_INST_MODE_SWITCHER, SYSEX_DISPATCH_BUTTON, MidiNote, tapType]
  SendSysex data, 4 // TODO: Is length really needed, when it is always the same for a sysex action?
@End













//////////////////////////////////////////////////////////
// These constants are shared across all Mozaic scripts //
//////////////////////////////////////////////////////////
@InitSharedConstants
  UNDEFINED = -1

  MOZ_INST_MODE_SWITCHER  = 1

  // Do not use the notes 60, 62, 64, and 65 for anything else (like MIDI bindings), as they are used for illuminating the BlueBoard buttons (see @IlluminateAllbuttons)!
  BB_BUTTON_A = 60
  BB_BUTTON_B = 62
  BB_BUTTON_C = 64
  BB_BUTTON_D = 65

  TAP_TYPE_IMMEDIATE = 0
  TAP_TYPE_1_BEAT    = 1
  TAP_TYPE_1_BAR     = 2

  MIDI_CHANNEL_BB = 0 // BlueBoard (listens only to channel 0)

  SYSEX_DISPATCH_BUTTON = 0 // To prevent accidental value collisions across instances, just use the current timestamp => type "date +%s" in UNIX prompt
@End
