// StepSequencer handles all the state handling of and interplay between all the apps needed during a live looping performance. These apps are first and foremost Group the Loop (GTL) and Audio Mixer (AUM), but also some AUv3 plugins like Chameleon (a sampler), Tonebridge (guitar effects amp simulator), and others.
//
// It allows to define sets of configurations. Each set contains the following chunks:
// - Group to select (GTL)
// - Loop to select (GTL)
// - Clock length (GTL)
// - Record sends: which input(s) are sent to GTL to be recorded. It can be only one or a combo of mic and guitar/keyboard.
// - Instrument FX: which effects are applied to the record sends
// - Recording mode (in GTL)
//
// Each of these chunks are represented by their own Mozaic instance. They handle both the interaction with the user, as well as the appliance of their specific info.
//
// AUM routing:
// - Receives from ModeSwitcher
// - Receives from LoopManager
// - Receives from GroupManager
// - Receives from ClockManager

@OnLoad
  SetShortName {21-StepSequencer}

  Call @InitSharedConstants
  Call @InitConstants
  Call @Reset
@End

@InitConstants
  FIRST_MANAGER_INSTANCE = MOZ_INST_LOOP_MANAGER
  LAST_MANAGER_INSTANCE  = MOZ_INST_CLOCK_MANAGER
@End

@InitVariables
  currentManagerInstance = FIRST_MANAGER_INSTANCE
  stackSize = 0
  lastActivatedStackId = UNDEFINED
@End

@Reset
  Log {Reset}
  Call @InitVariables
  Call @ResetDependingMozaicInstances
  Call @ProceedWithWorkflow
@End

@ResetDependingMozaicInstances
  data = [MOZ_INST_ALL, SYSEX_RESET_STEP_SEQUENCER]
  SendSysex data, 2
@End

@ProceedWithWorkflow
  data = [currentManagerInstance, SYSEX_PROCEED_WITH_WORKFLOW]
  SendSysex data, 2
@End

@OnSysex
  ReceiveSysex data
  sysexTarget = data[0]
  sysexAction = data[1]

  if sysexTarget = MOZ_INST_STEP_SEQUENCER
    if sysexAction = SYSEX_DISPATCH_BUTTON
      bbButton = data[2]
      tapType  = data[3]

      Log {Received button=}, bbButton, {, tapType=}, tapType

      Call @DispatchButtonPress
    elseif sysexAction = SYSEX_SELECTION_CONFIRMATION
      Log {Received selection success from manager instance=}, data[2]

      Call @CommitCurrentManager
    else
      Log {ERROR: Unknown sysexAction=}, sysexAction
    endif
  elseif sysexTarget = MOZ_INST_ALL
    if sysexAction = SYSEX_RESET_STEP_SEQUENCER
      Call @Reset
    endif
  endif
@End

@DispatchButtonPress
  if bbButton = BB_BUTTON_D and tapType = TAP_TYPE_IMMEDIATE
    Call @ArmConfig
  elseif bbButton = BB_BUTTON_D and tapType = TAP_TYPE_1_BAR
    Call @AddPreconfirmedConfig
  else
    data = [currentManagerInstance, SYSEX_DISPATCH_BUTTON, bbButton, tapType]
    SendSysex data, 4
  endif
@End

@CommitCurrentManager
  if currentManagerInstance < LAST_MANAGER_INSTANCE
    Inc currentManagerInstance
    Log {Proceeding with next manager instance=}, currentManagerInstance
  else
    Call @AddConfig
  endif

  Call @ProceedWithWorkflow
@End

@AddPreconfirmedConfig
  if stackSize = 0
    // TODO Call @SayPreConfirmNotPossible
    Log {Pre-confirmation not possible on config 1}
  else
    // Tell remaining managers to push their last input to their stack again
    while currentManagerInstance <= LAST_MANAGER_INSTANCE
      data = [currentManagerInstance, SYSEX_DUPLICATE_LAST_INPUT]
      SendSysex data, 2

      Inc currentManagerInstance
    endwhile

    Call @AddConfig
  endif

  Call @ProceedWithWorkflow
@End

@AddConfig
  Inc stackSize
  currentManagerInstance = FIRST_MANAGER_INSTANCE

  Call @SayAddedConfigX
  Log {Added config to stack, stackSize=}, stackSize
@End

@ArmConfig
  if stackSize > 0
    if lastActivatedStackId < stackSize - 1
      Call @ArmNextConfig
    else
      Call @SayNoConfigsLeft
      Call @SayAddConfigs
    endif
  else
    Call @SayStackEmpty
    Call @SayAddConfigs
  endif

  Call @ProceedWithWorkflow
@End

@SayAddedConfigX
  data = [MOZ_INST_FEEDBACKER, SYSEX_ANNOUNCE_FEEDBACK, FEEDBACK_ADDED, FEEDBACK_CONFIG, stackSize]
  SendSysex data, 5
@End

@ArmNextConfig
  Inc lastActivatedStackId

  for managerId = FIRST_MANAGER_INSTANCE to LAST_MANAGER_INSTANCE
    // The LoopManager comes before the GroupManager, as usually it's of more interest to choose the next loop than the next group, and the user might pre-confirm the current config (by holding the D button for 1 bar) right after choosing the loop.
    // However, the LoopManager needs to run *after* the GroupManager; otherwise, if the loop selection is done first in GTL, it will be reset through the group selection.
    // To fix this, we simply switch places of the two.
    if managerId = MOZ_INST_LOOP_MANAGER
      managerId = MOZ_INST_GROUP_MANAGER
    elseif managerId = MOZ_INST_GROUP_MANAGER
      managerId = MOZ_INST_LOOP_MANAGER
    endif

    data = [managerId, SYSEX_ARM_CONFIG, lastActivatedStackId]
    SendSysex data, 3
  endfor

  Call @SayConfigXOfYArmed
@End

@SayConfigXOfYArmed
  data = [MOZ_INST_FEEDBACKER, SYSEX_ANNOUNCE_FEEDBACK, FEEDBACK_ARMED, FEEDBACK_CONFIG, lastActivatedStackId + 1, FEEDBACK_OF, stackSize]
  SendSysex data, 7
@End

@SayNoConfigsLeft
  data = [MOZ_INST_FEEDBACKER, SYSEX_ANNOUNCE_FEEDBACK, FEEDBACK_ZERO, FEEDBACK_CONFIGS, FEEDBACK_LEFT]
  SendSysex data, 5
@End

@SayStackEmpty
  data = [MOZ_INST_FEEDBACKER, SYSEX_ANNOUNCE_FEEDBACK, FEEDBACK_ZERO, FEEDBACK_CONFIGS]
  SendSysex data, 4
@End

@SayAddConfigs
  data = [MOZ_INST_FEEDBACKER, SYSEX_ANNOUNCE_FEEDBACK, FEEDBACK_ADD, FEEDBACK_CONFIGS]
  SendSysex data, 4
@End







//////////////////////////////////////////////////////////
// These constants are shared across all Mozaic scripts //
//////////////////////////////////////////////////////////
@InitSharedConstants
  UNDEFINED = -1

  MOZ_INST_STEP_SEQUENCER = 21
  MOZ_INST_LOOP_MANAGER   = 31
  MOZ_INST_GROUP_MANAGER  = 32
  MOZ_INST_CLOCK_MANAGER  = 33
  MOZ_INST_FEEDBACKER     = 93
  MOZ_INST_ALL            = 100

  SYSEX_DISPATCH_BUTTON        = 0
  SYSEX_PROCEED_WITH_WORKFLOW  = 1
  SYSEX_ANNOUNCE_FEEDBACK      = 2
  SYSEX_SELECTION_CONFIRMATION = 3
  SYSEX_ARM_CONFIG             = 6
  SYSEX_RESET_STEP_SEQUENCER   = 7
  SYSEX_DUPLICATE_LAST_INPUT   = 8

  BB_BUTTON_A = 60
  BB_BUTTON_B = 62
  BB_BUTTON_C = 64
  BB_BUTTON_D = 65

  TAP_TYPE_IMMEDIATE = 0
  TAP_TYPE_1_BEAT    = 1
  TAP_TYPE_1_BAR     = 2

  FEEDBACK_ZERO        =  0
  FEEDBACK_STACK_EMPTY = 22
  FEEDBACK_ADD         = 23
  FEEDBACK_CONFIG      = 24
  FEEDBACK_CONFIGS     = 25
  FEEDBACK_ARMED       = 26
  FEEDBACK_OF          = 27
  FEEDBACK_LEFT        = 28
  FEEDBACK_ADDED       = 29
@End
